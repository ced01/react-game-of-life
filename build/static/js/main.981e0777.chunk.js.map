{"version":3,"sources":["components/Cell/Cell.js","components/Vessel/LWSS/LWSS.js","components/Vessel/AbtractVessel.js","components/Environement/Environement.js","App.js","serviceWorker.js","index.js"],"names":["Cell","cellStyle","border","backgroundColor","concat","_this","props","data","alive","padding","color","boxShadow","outline","react_default","a","createElement","style","this","onClick","className","Component","LWSS","cells","cellOrigin","posInEnv","envWith","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","spaceTaken","environement","length","AbtractVessel","env","constructor","TypeError","origin","Environement","width","height","initialCellState","content","nbOfcellsAliveNearMe","initialise","ih","iw","arr","push","pos","x","y","nbOfCellsAliveNearMe","Math","floor","random","App","timerID","nbTotalOfSimulation","nbSimulation","stepForTimer","golIsRunning","middlewidth","getWidth","middleheight","getHeight","gridwidthMinusOne","gridheightMinusOne","cellClicked","setOfFrame","generateAliveCellsAt","state","btnState","btnColor","btnLabel","arrayOfRows","generateFrameOnClick","bind","assertThisInitialized","wipeOut","generateRandFrame","display","setState","analyseCell","_this2","setInterval","playOneGoL","clearInterval","pauseGoL","indexes","fromRand","cs","getContent","c","cell","posx","posy","indexPosX","indexPosY","forEach","i","notifyCells","setCellsAlive","ind","nbOfCells","cplusOne","cminusOne","subindexplus","subindexminus","_this3","id","map","btn","Cell_Cell","key","centerIndex","vessel","setOrigin","create","generateFrameAtPos","_this4","Row","Col","xs","sm","Button","runGoL","r","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qSAEqBA,oNAGjBC,UAAY,CACRC,OAAQ,kBACRC,gBAAe,GAAAC,OAAKC,EAAKC,MAAMC,KAAKC,MAAQ,UAAY,WACxDC,QAAS,SACTC,MAAM,QACNC,UAAW,OACXC,QAAQ,6EAIR,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,MAAOC,KAAKhB,UAAWiB,QAASD,KAAKX,MAAMY,QAASC,UAAU,gBAbnDC,cCCbC,cAIjB,SAAAA,EAAYC,EAAMC,EAAWC,EAASC,GAAS,IAAApB,EAAA,OAAAqB,OAAAC,EAAA,EAAAD,CAAAT,KAAAI,IAC3ChB,EAAAqB,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAL,GAAAS,KAAAb,KAAMK,EAAMC,EAAWC,EAASC,KAHpCM,WAAa,EAIT1B,EAAK0B,WAAa,EAFyB1B,wEAwB3C,IAlBIY,KAAKe,aAAaf,KAAKM,YAAYf,QACnCS,KAAKe,aAAaf,KAAKM,YAAYf,OAAQ,GAE3CS,KAAKe,aAAaf,KAAKM,YAAYf,QACnCS,KAAKe,aAAaf,KAAKM,YAAYf,OAAQ,GAE5CS,KAAKM,WAAaN,KAAKc,WAAad,KAAKe,aAAaC,SAAWhB,KAAKe,aAAaf,KAAKM,WAAaN,KAAKc,YAAYvB,QACrHS,KAAKe,aAAaf,KAAKM,WAAaN,KAAKc,YAAYvB,OAAQ,GAE9DS,KAAKM,WAAaN,KAAKQ,QAAUR,KAAKc,WAAad,KAAKe,aAAaC,SAAWhB,KAAKe,aAAaf,KAAKM,WAAaN,KAAKQ,QAAUR,KAAKc,YAAYvB,QACnJS,KAAKe,aAAaf,KAAKM,WAAaN,KAAKQ,QAAUR,KAAKc,YAAYvB,OAAQ,GAE7ES,KAAKM,YAAcN,KAAKM,WAAa,EAAEN,KAAKQ,QAAU,IAAMR,KAAKe,aAAaf,KAAKM,WAAa,EAAIN,KAAKQ,SAASjB,QACjHS,KAAKe,aAAaf,KAAKM,WAAa,EAAIN,KAAKQ,SAASjB,OAAQ,GAE/DS,KAAKM,YAAcN,KAAKM,WAAa,EAAEN,KAAKQ,QAAUR,KAAKc,WAAa,EAAI,IAAMd,KAAKe,aAAaf,KAAKM,WAAa,EAAIN,KAAKQ,QAAUR,KAAKc,WAAa,GAAGvB,QAC7JS,KAAKe,aAAaf,KAAKM,WAAa,EAAIN,KAAKQ,QAAUR,KAAKc,WAAa,GAAGvB,OAAQ,GAEpFS,KAAKO,SAAWP,KAAKM,WAAaN,KAAKQ,QAAU,EAAIR,KAAKO,UAAYP,KAAKM,WAAaN,KAAKQ,QAAUR,KAAKc,WAAYd,KAAKO,WAC1HP,KAAKO,SAAWP,KAAKe,aAAaC,SAAWhB,KAAKe,aAAaf,KAAKO,UAAUhB,QAC7ES,KAAKe,aAAaf,KAAKO,UAAUhB,OAAQ,qBCxBrD,SAAA0B,EAAYC,EAAIZ,EAAWC,EAASC,GAChC,GADyCC,OAAAC,EAAA,EAAAD,CAAAT,KAAAiB,GAAAjB,KAN7Ce,aAAe,GAM6Bf,KAL5CM,WAAa,KAK+BN,KAJ5CO,SAAW,EAIiCP,KAH5Cc,WAAa,EAG+Bd,KAF5CQ,QAAU,EAGmB,mBAArBR,KAAKmB,YACL,MAAM,IAAIC,UAAU,mEAEpBpB,KAAKe,aAAeG,EACpBlB,KAAKM,WAAaA,EAClBN,KAAKO,SAAWA,EAChBP,KAAKQ,QAAUA,wDAIba,GACNrB,KAAKM,WAAae,YCpBLC,aAQjB,SAAAA,EAAYC,EAAMC,EAAOC,GAAmBhB,OAAAC,EAAA,EAAAD,CAAAT,KAAAsB,GAAAtB,KAN5CuB,MAAQ,EAMmCvB,KAL3CwB,OAAS,EAKkCxB,KAJ3C0B,QAAU,GAIiC1B,KAH3CyB,kBAAmB,EAGwBzB,KAF3C2B,qBAAuB,EAGnB3B,KAAKuB,MAAQA,EACbvB,KAAKwB,OAASA,EACdxB,KAAKyB,iBAAmBA,EACxBzB,KAAK0B,QAAU1B,KAAK4B,sEAIpB,IAAIC,EAAK,EAAGC,EAAK,EAAGC,EAAK,GACzB,IAAIF,EAAK,EAAGA,EAAK7B,KAAKwB,OAAQK,IAC1B,IAAIC,EAAK,EAAGA,EAAK9B,KAAKuB,MAAOO,IAEzBC,EAAIC,KAAK,CAACzC,MAAQS,KAAKyB,iBAAmBQ,IAAM,CAACC,EAAEJ,EAAKK,EAAEN,GAAKO,qBAAqBpC,KAAK2B,uBAGjG,OAAOI,+CAIP,IAAIG,EAAIG,KAAKC,MAAMD,KAAKE,SAASvC,KAAKuB,MAAM,GAAIY,EAAIE,KAAKC,MAAMD,KAAKE,SAASvC,KAAKwB,OAAO,GAUzF,MATa,CACT,CAAC,CAACU,EAAEA,EAAE,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,IAChC,CAAC,CAACD,EAAEA,EAAE,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,IAC5C,CAAC,CAACD,EAAEA,EAAE,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,IACxD,CAAC,CAACD,EAAEA,EAAI,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAI,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAI,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAEC,EAAEA,EAAE,GAAG,CAACD,EAAEA,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,IAC1E,CAAC,CAACD,EAAEA,EAAE,EAAEC,EAAEA,EAAE,GAAG,CAACD,EAAEA,EAAEC,EAAEA,EAAE,GAAG,CAACD,EAAEA,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,EAAE,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,EAAE,IAC1E,CAAC,CAACD,EAAEA,EAAEC,EAAEA,EAAE,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAEC,EAAEA,GAAG,CAACD,EAAEA,EAAEC,EAAEA,EAAE,GAAG,CAACD,EAAEA,EAAE,EAAEC,EAAEA,EAAE,wCAO9D,OAAOnC,KAAKuB,0CAGZ,OAAOvB,KAAKwB,4CAGZ,OAAOxB,KAAK0B,2CAELA,GACP1B,KAAK0B,QAAUA,WCmORc,cA5Ob,SAAAA,EAAYnD,GAAO,IAAAD,EAAA,OAAAqB,OAAAC,EAAA,EAAAD,CAAAT,KAAAwC,IACjBpD,EAAAqB,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAA+B,GAAA3B,KAAAb,KAAMX,KA7BRoD,QAAU,KA4BSrD,EA3BnBsD,oBAAsB,EA2BHtD,EA1BnBuD,aAAe,EA0BIvD,EAzBnBwD,aAAe,EAyBIxD,EAxBnByD,cAAe,EAwBIzD,EAtBnB8B,IAAM,IAAII,EAAa,GAAG,IAAG,GAsBVlC,EApBnB0D,YAAc1D,EAAK8B,IAAI6B,WAAW,EAoBf3D,EAnBnB4D,aAAe5D,EAAK8B,IAAI+B,YAAY,EAmBjB7D,EAjBnB8D,kBAAoB9D,EAAK8B,IAAI6B,WAAa,EAiBvB3D,EAhBnB+D,mBAAqB/D,EAAK8B,IAAI+B,YAAc,EAgBzB7D,EAdnBgE,YAAc,KAcKhE,EAZnBiE,WAAa,CACC,CAAC,CAACnB,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,eAClH,CAAC,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,eAC7J,CAAC,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,eACxM,CAAC,CAACd,EAAE9C,EAAK0D,YAAc,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAc,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAc,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,aAAa,GAAG,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,eACzP,CAAC,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,aAAa,GAAG,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,aAAa,GAAG,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,aAAa,GAAG,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,aAAa,IACpQ,CAAC,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,aAAa,GAAG,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,cAAc,CAACd,EAAE9C,EAAK0D,YAAYX,EAAE/C,EAAK4D,aAAa,GAAG,CAACd,EAAE9C,EAAK0D,YAAY,EAAEX,EAAE/C,EAAK4D,aAAa,KAMhN5D,EAFnBiB,MAAQjB,EAAKkE,qBAAqBlE,EAAKiE,WAAW,IAAG,GAInDjE,EAAKmE,MAAQ,CACbC,SAAW,CACTC,SAAW,UACXC,SAAW,OAEbC,YAAc,IAGdvE,EAAKwE,qBAAuBxE,EAAKwE,qBAAqBC,KAA1BpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAArB,KAC5BA,EAAK2E,QAAU3E,EAAK2E,QAAQF,KAAbpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAArB,KACfA,EAAK4E,kBAAoB5E,EAAK4E,kBAAkBH,KAAvBpD,OAAAqD,EAAA,EAAArD,QAAAqD,EAAA,EAAArD,CAAArB,KAZRA,mFAgBjBY,KAAKiE,+CAKHjE,KAAKkE,SAAS,CAACP,YAAc,KAC7B3D,KAAKmE,cACLnE,KAAKiE,2CAGD,IAAAG,EAAApE,KACNA,KAAKkE,SAAS,CAACV,SAAW,CACxBC,SAAW,YACXC,SAAW,UAGX1D,KAAK6C,cAAe,EACpB7C,KAAKyC,QAAU4B,YACb,WAGID,EAAKE,cAMTtE,KAAK4C,iDAMT5C,KAAKkE,SAAS,CAACV,SAAW,CACxBC,SAAW,UACXC,SAAW,SAEb1D,KAAK6C,cAAe,EACpB0B,cAAcvE,KAAKyC,wDAInBzC,KAAKwE,wDAGcC,EAASC,GAC5B,IAAIC,EAAKD,EAAW1E,KAAKK,MAAOL,KAAKkB,IAAI0D,aACrCC,EAAI,EACJC,EAAO,KACPC,EAAO,EACPC,EAAO,EACPC,EAAY,EACZC,EAAY,EAuBhB,OAlBAT,EAAQU,QAAQ,SAAAC,GAKd,IAHAH,EAAYG,EAAElD,EACdgD,EAAYE,EAAEjD,EAEV0C,EAAI,EAAGA,EAAIF,EAAG3D,OAAQ6D,IACxBC,EAAOH,EAAGE,GACVE,EAAOD,EAAK7C,IAAIC,EAChB8C,EAAOF,EAAK7C,IAAIE,EAEb8C,IAAcF,GAAQG,IAAcF,IACrCF,EAAKvF,OAAS,KAKpBS,KAAKqF,YAAYV,GAEVA,wCAKL3E,KAAKsF,gBACLtF,KAAKqF,YAAY,IACjBrF,KAAK2C,uDAIP,IAAIkC,EAAI,EACJxE,EAAQL,KAAKK,MACbyE,EAAO,KAGP1C,EAAuB,EAI3B,IAAIyC,EAAI,EAAGA,EAAIxE,EAAMW,OAAQ6D,IAE3BzC,GADA0C,EAAOzE,EAAMwE,IACezC,qBAIzB0C,EAAKvF,OACF6C,EAAuB,GAAKA,EAAuB,KACrD0C,EAAKvF,OAAQ,GAGa,IAAzB6C,IACD0C,EAAKvF,OAAQ,uCAKToF,GAEV,IAAIE,EAAI,EACJU,EAAM,EACNlF,EAAsB,IAAdsE,EAAG3D,OAAe2D,EAAK3E,KAAKK,MACpCyE,EAAO,KACPU,EAAYxF,KAAKkB,IAAI6B,WAAa/C,KAAKkB,IAAI+B,YAC3CwC,EAAW,EACXC,EAAY,EACZC,EAAe,EACfC,EAAgB,EAGpB,IAAIf,EAAI,EAAGA,EAAIxE,EAAMW,OAAQ6D,IAS3B,IANAa,EAAYb,EAAI,EAChBY,EAAWZ,EAAI,GAFfC,EAAOzE,EAAMwE,IAGRzC,qBAAuB,EAIxBmD,EAAMG,EAAWH,GAAOE,EAAUF,IAEpCI,EAAeJ,EAAMvF,KAAKkB,IAAI6B,WAC9B6C,EAAgBL,EAAMvF,KAAKkB,IAAI6B,WAE5BwC,EAAM,GAAKA,EAAMC,GAAanF,EAAMkF,GAAKhG,OAASgG,IAAQV,GAC3DC,EAAK1C,uBAEJmD,EAAMC,GAAanF,EAAML,KAAKkB,IAAI+B,aAAajD,KAAKkB,IAAI6B,WAAW,GAAKwC,GAAKhG,OAASgG,IAAQV,GAC/FC,EAAK1C,uBAEJmD,EAAM,GAAKlF,EAAMkF,EAAMvF,KAAKkB,IAAI+B,aAAajD,KAAKkB,IAAI6B,WAAW,IAAIxD,OAASgG,IAAQV,GACvFC,EAAK1C,uBAGJuD,EAAeH,GAAanF,EAAMsF,GAAcpG,OACjDuF,EAAK1C,uBAEJwD,EAAgB,GAAKvF,EAAMuF,GAAerG,OAC3CuF,EAAK1C,uBAEJuD,EAAeH,GAAanF,EAAOsF,EAAgB3F,KAAKkB,IAAI+B,aAAajD,KAAKkB,IAAI6B,WAAW,IAAKxD,OAEnGuF,EAAK1C,uBAGJwD,EAAgB,GAAKvF,EAAMuF,EAAgB5F,KAAKkB,IAAI+B,aAAajD,KAAKkB,IAAI6B,WAAW,IAAIxD,OAE1FuF,EAAK1C,yDAMJ,IAAAyD,EAAA7F,KAEJK,EAAQL,KAAKK,MAAOyF,EAAK,EAExB/D,EAAM1B,EAAM0F,IAAK,SAAAlB,GACnB,IAAImB,EAAMpG,EAAAC,EAAAC,cAACmG,EAAD,CAAMC,IAAKJ,EACLxG,KAAOuF,EACP5E,QAAS4F,EAAKjC,qBAAqBC,KAAKgC,EAAKC,KAG7D,OADAA,IACOE,IAGThG,KAAKkE,SAAS,CAACP,YAAc5B,sCAI7B/B,KAAKK,MAAQL,KAAKkB,IAAIU,aACtB5B,KAAKiE,uDAGckC,GACnB,IAAIC,EAAS,IAAIhG,EAAKJ,KAAKK,MAAM8F,EAAY,EAAEnG,KAAKkB,IAAI6B,YACxDqD,EAAOC,UAAUF,GACjBC,EAAOE,SACPtG,KAAKqF,YAAY,IACjBrF,KAAKiE,sDAILjE,KAAKsD,qBAAqBtD,KAAKkB,IAAIqF,qBAAqBlE,KAAKC,MAAMD,KAAKE,UAAYvC,KAAKqD,WAAWrC,OAAS,MAAM,oCAG5G,IAAAwF,EAAAxG,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAKvG,UAAU,QACbN,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAIhH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBAAf,aAA4CF,KAAK2C,eACrE/C,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAIhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAQ3G,UAAU,MAAMP,SAAO,EAACF,MAAOO,KAAKuD,MAAMC,SAASC,SAAUxD,QAAS,WAAOuG,EAAK3D,aAAgB2D,EAAKhC,WAAagC,EAAKM,WAAa9G,KAAKuD,MAAMC,SAASE,WACtL9D,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAIhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAQ3G,UAAU,MAAMP,SAAO,EAACF,MAAM,SAASQ,QAAS,WAAOuG,EAAKzC,YAApE,UACpBnE,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAIhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAQ3G,UAAU,MAAMP,SAAO,EAACF,MAAM,OAAOQ,QAAS,WAAOuG,EAAKxC,sBAAlE,WACpBpE,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,OAElBhH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACZF,KAAKuD,MAAMI,YAAYoC,IAAI,SAAAgB,GAAC,OAAIA,aAlQzB5G,aCAE6G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO1H,EAAAC,EAAAC,cAACyH,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.981e0777.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Cell extends Component {\r\n\t\r\n\r\n    cellStyle = {\r\n        border: '1px solid black',\r\n        backgroundColor: `${this.props.data.alive ? '#428bca' : '#ccccff'}`,\r\n        padding: '0.25em',\r\n        color:'black',\r\n        boxShadow: 'none',\r\n        outline:'0'\r\n    }\r\n\r\n    render(){\r\n        return <button style={this.cellStyle} onClick={this.props.onClick} className=\"cell\"></button>\r\n    }\r\n\r\n}","import AbstractVessel from '../AbtractVessel';\r\n\r\n\r\nexport default class LWSS extends AbstractVessel {\r\n\r\n    spaceTaken = 0;\r\n    \r\n    constructor(cells,cellOrigin,posInEnv,envWith) {\r\n        super(cells,cellOrigin,posInEnv,envWith);\r\n        this.spaceTaken = 4;\r\n    }\r\n\r\n    create(){\r\n        if(!this.environement[this.cellOrigin].alive) {\r\n            this.environement[this.cellOrigin].alive = true;\r\n        }\r\n        if(!this.environement[this.cellOrigin].alive) {\r\n            this.environement[this.cellOrigin].alive = true;\r\n        }\r\n        if(this.cellOrigin + this.spaceTaken < this.environement.length && !this.environement[this.cellOrigin + this.spaceTaken].alive){\r\n            this.environement[this.cellOrigin + this.spaceTaken].alive = true;\r\n        }\r\n        if(this.cellOrigin - this.envWith + this.spaceTaken < this.environement.length && !this.environement[this.cellOrigin - this.envWith + this.spaceTaken].alive){\r\n            this.environement[this.cellOrigin - this.envWith + this.spaceTaken].alive = true;\r\n        }\r\n        if(this.cellOrigin && this.cellOrigin - 2*this.envWith > 0 && !this.environement[this.cellOrigin - 2 * this.envWith].alive){\r\n            this.environement[this.cellOrigin - 2 * this.envWith].alive = true;\r\n        }\r\n        if(this.cellOrigin && this.cellOrigin - 2*this.envWith + this.spaceTaken - 1 > 0 && !this.environement[this.cellOrigin - 2 * this.envWith + this.spaceTaken - 1].alive){\r\n            this.environement[this.cellOrigin - 2 * this.envWith + this.spaceTaken - 1].alive = true;\r\n        }\r\n        for(this.posInEnv = this.cellOrigin + this.envWith + 1 ; this.posInEnv <= this.cellOrigin + this.envWith + this.spaceTaken; this.posInEnv++) {\r\n            if(this.posInEnv < this.environement.length && !this.environement[this.posInEnv].alive){\r\n                this.environement[this.posInEnv].alive = true;\r\n            }\r\n        } \r\n    }\r\n}","\r\nexport default class AbtractVessel {\r\n\r\n    environement = [];\r\n    cellOrigin = null;\r\n    posInEnv = 0;\r\n    spaceTaken = 0;\r\n    envWith = 0;\r\n\r\n    constructor(env,cellOrigin,posInEnv,envWith){\r\n        if (this.constructor === \"AbstractConfig\") {\r\n            throw new TypeError('Abstract class \"AbstractConfig\" cannot be instantiated directly');\r\n        }else{\r\n            this.environement = env;\r\n            this.cellOrigin = cellOrigin;\r\n            this.posInEnv = posInEnv;\r\n            this.envWith = envWith;\r\n        }\r\n    }\r\n\r\n    setOrigin(origin){\r\n        this.cellOrigin = origin;\r\n    }\r\n}","\r\nexport default class Environement {\r\n    \r\n    width = 0;\r\n    height = 0;\r\n    content = [];\r\n    initialCellState = false;\r\n    nbOfcellsAliveNearMe = 0;\r\n\r\n    constructor(width,height,initialCellState) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.initialCellState = initialCellState;\r\n        this.content = this.initialise();\r\n    }\r\n    \r\n    initialise(){\r\n        let ih = 0, iw = 0, arr =[];\r\n        for(ih = 0; ih < this.height; ih++ ) {\r\n            for(iw = 0; iw < this.width; iw++ ) {\r\n                //if(posx !== this.width - 1  && posy !== ghmo && posx !== 0 && posy !== 0)*/)\r\n                arr.push({alive : this.initialCellState , pos : {x:iw , y:ih}, nbOfCellsAliveNearMe:this.nbOfcellsAliveNearMe});\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    generateFrameAtPos(){\r\n        let x = Math.floor(Math.random()*this.width-1), y = Math.floor(Math.random()*this.height-1),\r\n        setOfFrame = [\r\n            [{x:x-1,y:y},{x:x,y:y},{x:x+1,y:y}],\r\n            [{x:x-2,y:y},{x:x-1,y:y},{x:x,y:y},{x:x+1,y:y}],\r\n            [{x:x-2,y:y},{x:x-1,y:y},{x:x,y:y},{x:x+1,y:y},{x:x+2,y:y}],\r\n            [{x:x + 3,y:y},{x:x + 2,y:y},{x:x + 1,y:y},{x:x,y:y-1},{x:x,y:y},{x:x-1,y:y}],\r\n            [{x:x-1,y:y+1},{x:x,y:y+1},{x:x,y:y},{x:x+1,y:y},{x:x+1,y:y-1},{x:x+2,y:y-1}],\r\n            [{x:x,y:y+1},{x:x-1,y:y},{x:x,y:y},{x:x,y:y-1},{x:x+1,y:y-1}]\r\n          ];\r\n          \r\n        return setOfFrame;\r\n    }\r\n\r\n    getWidth(){\r\n        return this.width;\r\n    }\r\n    getHeight(){\r\n        return this.height;\r\n    }\r\n    getContent(){\r\n        return this.content;\r\n    }\r\n    setContent(content){\r\n        this.content = content;\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { Row, Col } from 'reactstrap';\nimport './App.css';\n\nimport Cell from './components/Cell/Cell';\nimport LWSS from './components/Vessel/LWSS/LWSS';\nimport Environement from './components/Environement/Environement';\n\n\n\n\nclass App extends Component {\n\n  timerID = null;\n  nbTotalOfSimulation = 2;\n  nbSimulation = 0;\n  stepForTimer = 5;\n  golIsRunning = false;\n  \n  env = new Environement(70,40,false);\n\n  middlewidth = this.env.getWidth()/2;\n  middleheight = this.env.getHeight()/2;\n\n  gridwidthMinusOne = this.env.getWidth() - 1;\n  gridheightMinusOne = this.env.getHeight() - 1;\n\n  cellClicked = null;\n\n  setOfFrame = [\n                [{x:this.middlewidth-1,y:this.middleheight},{x:this.middlewidth,y:this.middleheight},{x:this.middlewidth+1,y:this.middleheight}],\n                [{x:this.middlewidth-2,y:this.middleheight},{x:this.middlewidth-1,y:this.middleheight},{x:this.middlewidth,y:this.middleheight},{x:this.middlewidth+1,y:this.middleheight}],\n                [{x:this.middlewidth-2,y:this.middleheight},{x:this.middlewidth-1,y:this.middleheight},{x:this.middlewidth,y:this.middleheight},{x:this.middlewidth+1,y:this.middleheight},{x:this.middlewidth+2,y:this.middleheight}],\n                [{x:this.middlewidth + 3,y:this.middleheight},{x:this.middlewidth + 2,y:this.middleheight},{x:this.middlewidth + 1,y:this.middleheight},{x:this.middlewidth,y:this.middleheight-1},{x:this.middlewidth,y:this.middleheight},{x:this.middlewidth-1,y:this.middleheight}],\n                [{x:this.middlewidth-1,y:this.middleheight+1},{x:this.middlewidth,y:this.middleheight+1},{x:this.middlewidth,y:this.middleheight},{x:this.middlewidth+1,y:this.middleheight},{x:this.middlewidth+1,y:this.middleheight-1},{x:this.middlewidth+2,y:this.middleheight-1}],\n                [{x:this.middlewidth,y:this.middleheight+1},{x:this.middlewidth-1,y:this.middleheight},{x:this.middlewidth,y:this.middleheight},{x:this.middlewidth,y:this.middleheight-1},{x:this.middlewidth+1,y:this.middleheight-1}]\n                \n              ];\n\n  cells = this.generateAliveCellsAt(this.setOfFrame[0],false);\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    btnState : {\n      btnColor : \"success\",\n      btnLabel : \"RUN\"\n    },\n    arrayOfRows : [],\n    };\n\n    this.generateFrameOnClick = this.generateFrameOnClick.bind(this);\n    this.wipeOut = this.wipeOut.bind(this);\n    this.generateRandFrame = this.generateRandFrame.bind(this);\n  }\n\n  componentDidMount() {\n    this.display();\n    //this.runGoL();\n  }\n\n  playOneGoL() {\n      this.setState({arrayOfRows : []});\n      this.analyseCell();\n      this.display();\n  }\n\n  runGoL(){\n    this.setState({btnState : {\n      btnColor : \"secondary\",\n      btnLabel : \"STOP\"\n    }});\n     \n      this.golIsRunning = true;\n      this.timerID = setInterval(\n        () => {\n        /*if( this.nbSimulation !== this.nbTotalOfSimulation ){*/\n\n            this.playOneGoL();\n        //}\n       /* if(this.nbSimulation === this.nbTotalOfSimulation ){\n          this.pauseGoL();\n        }*/\n        },\n        this.stepForTimer\n      ); \n    \n  }\n\n  pauseGoL(){\n    this.setState({btnState : {\n      btnColor : \"success\",\n      btnLabel : \"RUN\"\n    }});\n    this.golIsRunning = false;\n    clearInterval(this.timerID);\n  }\n\n  componentWillUnmount() {\n    this.pauseGoL();\n  }\n\n  generateAliveCellsAt(indexes, fromRand){\n    let cs = fromRand ? this.cells: this.env.getContent(),\n        c = 0, \n        cell = null, \n        posx = 0, \n        posy = 0, \n        indexPosX = 0,\n        indexPosY = 0;\n    \n\n    // Initialise grid cells with indexes \n\n    indexes.forEach(i => {\n      //console.log(i);\n      indexPosX = i.x;\n      indexPosY = i.y;\n      \n      for(c = 0; c < cs.length; c++){\n        cell = cs[c];\n        posx = cell.pos.x;\n        posy = cell.pos.y;\n        \n        if(indexPosX === posx && indexPosY === posy){\n          cell.alive  = true;\n        }\n      }\n    });\n     \n    this.notifyCells(cs);\n\n    return cs;\n  }\n\n  analyseCell(){\n\n      this.setCellsAlive();\n      this.notifyCells([]);\n      this.nbSimulation++;\n  }\n\n  setCellsAlive(){\n    let c = 0, \n        cells = this.cells,\n        cell = null,\n        //posx = 0, \n        //posy = 0,\n        nbOfCellsAliveNearMe = 0;\n        //gwmo = this.gridwidthMinusOne,\n        //ghmo = this.gridheightMinusOne;\n\n    for(c = 0; c < cells.length; c++){\n      cell = cells[c];\n      nbOfCellsAliveNearMe = cell.nbOfCellsAliveNearMe; \n      //posx = cell.pos.x;\n      //posy = cell.pos.y;\n  \n      if(cell.alive){\n        if((nbOfCellsAliveNearMe < 2 || nbOfCellsAliveNearMe > 3) /*&& (posx !== gwmo && posy !== ghmo && posx !== 0 && posy !== 0)*/){\n          cell.alive = false;\n        }\n      } else {\n        if(nbOfCellsAliveNearMe === 3 /*|| posx === gwmo || posy === ghmo || posx === 0 || posy === 0*/){\n          cell.alive = true;\n        }\n      }\n    }\n  }\n  notifyCells(cs){\n\n    let c = 0, \n        ind = 0,\n        cells = cs.length !== 0 ? cs : this.cells,\n        cell = null,\n        nbOfCells = this.env.getWidth() * this.env.getHeight(), \n        cplusOne = 0, \n        cminusOne = 0,\n        subindexplus = 0,\n        subindexminus = 0;\n\n  \n    for(c = 0; c < cells.length; c++){\n\n      cell = cells[c];\n      cminusOne = c - 1;\n      cplusOne = c + 1;\n      cell.nbOfCellsAliveNearMe = 0;\n\n      \n      \n      for(ind = cminusOne ;ind <= cplusOne; ind++){\n\n        subindexplus = ind + this.env.getWidth();\n        subindexminus = ind - this.env.getWidth();\n\n        if(ind > 0 && ind < nbOfCells && cells[ind].alive && ind !== c) {\n          cell.nbOfCellsAliveNearMe++;\n        }\n        if(ind > nbOfCells && cells[this.env.getHeight()*(this.env.getWidth()-1) - ind].alive && ind !== c) {\n          cell.nbOfCellsAliveNearMe++;\n        }\n        if(ind < 0 && cells[ind + this.env.getHeight()*(this.env.getWidth()-1)].alive && ind !== c) {\n          cell.nbOfCellsAliveNearMe++;\n        }\n\n        if(subindexplus < nbOfCells && cells[subindexplus].alive){\n          cell.nbOfCellsAliveNearMe++; \n        }\n        if(subindexminus > 0 && cells[subindexminus].alive){\n          cell.nbOfCellsAliveNearMe++;\n        }\n        if(subindexplus > nbOfCells && cells[ subindexplus - (this.env.getHeight()*(this.env.getWidth()-1))].alive) {\n          //console.log(subindexplus);\n          cell.nbOfCellsAliveNearMe++;\n        }\n        \n        if(subindexminus < 0 && cells[subindexminus + this.env.getHeight()*(this.env.getWidth()-1)].alive) {\n          //console.log(subindexminus);\n          cell.nbOfCellsAliveNearMe++;\n        }\n      }\n    }\n  }\n\n  display(){\n    \n   let cells = this.cells, id = 0; /*cell = null,arr = [],posx = 0, posy = 0, alive = false;*/\n\n    let arr = cells.map( c => {\n      let btn = <Cell key={id} \n                      data={ c } \n                      onClick={this.generateFrameOnClick.bind(this,id)}\n                />\n      id++;\n      return btn\n      }\n    );\n    this.setState({arrayOfRows : arr});\n  }\n\n  wipeOut(){\n    this.cells = this.env.initialise();\n    this.display();\n  }\n\n  generateFrameOnClick(centerIndex){\n    let vessel = new LWSS(this.cells,centerIndex,0,this.env.getWidth());\n    vessel.setOrigin(centerIndex);\n    vessel.create();\n    this.notifyCells([]);\n    this.display();\n  }\n\n  generateRandFrame(){\n    this.generateAliveCellsAt(this.env.generateFrameAtPos()[Math.floor(Math.random() * (this.setOfFrame.length - 1))], true);\n  }\n\n  render() {\n    return (\n      <div>\n        <Row className=\"menu\">\n          <Col xs=\"12\" sm=\"2\"><div className=\"simulation-number\"> S. N° { this.nbSimulation }</div></Col>\n          <Col xs=\"12\" sm=\"2\"><Button className=\"btn\" outline color={this.state.btnState.btnColor} onClick={() => {this.golIsRunning ?  this.pauseGoL() : this.runGoL()}}>{ this.state.btnState.btnLabel }</Button></Col>\n          <Col xs=\"12\" sm=\"2\"><Button className=\"btn\" outline color=\"danger\" onClick={() => {this.wipeOut()}}>CLEAR</Button></Col>\n          <Col xs=\"12\" sm=\"2\"><Button className=\"btn\" outline color=\"info\" onClick={() => {this.generateRandFrame()}}>RAMDOM</Button></Col>\n          <Col xs=\"12\" sm=\"2\"></Col>\n        </Row>\n        <div className=\"wrapper\">\n          {this.state.arrayOfRows.map(r => r)}\n        </div>\n    </div>\n  );\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}